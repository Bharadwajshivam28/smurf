{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Smurf","text":"<p>Smurf is a command-line interface (CLI) application built using Golang leveraging technology specific SDKs, designed to simplify and automate commands for essential tools like Terraform and Docker. It provides intuitive, unified commands to execute Terraform plans, Docker container management, and other DevOps tasks seamlessly from one interface. Whether you need to spin up environments, manage containers, or apply infrastructure as code, this CLI streamlines multi-tool operations, boosting productivity and reducing context-switching.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Terraform Command Wrapper (stf): Run <code>init</code>, <code>plan</code>, <code>apply</code>, <code>output</code>, <code>drift</code>, <code>validate</code>, <code>destroy</code>, <code>format</code> commands, and <code>provision</code>, a combined operation of <code>init</code>, <code>validate</code>, and <code>apply</code>.</li> <li>Helm Command Wrapper (selm): Run <code>create</code>, <code>install</code>, <code>lint</code>, <code>list</code>, <code>status</code>, <code>template</code>, <code>upgrade</code>, <code>uninstall</code> commands, and <code>provision</code>, a combination of <code>install</code>, <code>upgrade</code>, <code>lint</code>, and <code>template</code>.</li> <li>Docker Command Wrapper (sdkr): Run <code>build</code>, <code>scan</code>, <code>tag</code>, <code>publish</code>, <code>push</code> commands, and <code>provision</code>, a combination of <code>build</code>, <code>scan</code>, and <code>publish</code>.</li> <li>Multicloud Container registry : Push images from multiple cloud registries like AWS ECR, GCP GCR, Azure ACR, and Docker Hub.Run <code>smurf sdkr push --help</code> to push images from the specified registry.</li> <li>Git Integration: (Yet to come)</li> <li>Unified CLI Interface: Manage multi-tool operations from one interface, reducing the need for multiple command sets.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Smurf tool Installation Guide</p>"},{"location":"#usage","title":"Usage","text":""},{"location":"#smurf-selm","title":"Smurf SELM","text":"<p>Usage Guide for using helm commands via smurf tool</p>"},{"location":"#smurf-sdkr","title":"Smurf SDKR","text":"<p>Usage Guide for using docker commands via smurf tool</p>"},{"location":"#smurf-stf","title":"Smurf STF","text":"<p>Usage Guide for using terraform commands via smurf tool</p>"},{"location":"#contributors","title":"Contributors \u2728","text":"<p>Big thanks to our contributors for elevating our project with their dedication and expertise! But, we do not wish to stop there, would like to invite contributions from the community in improving these projects and making them more versatile for better reach. Remember, every bit of contribution is immensely valuable, as, together, we are moving in only 1 direction, i.e. forward.</p> <p> </p> <p>If you're considering contributing to our project, here are a few quick guidelines that we have been following (Got a suggestion? We are all ears!):</p> <ul> <li>Fork the Repository: Create a new branch for your feature or bug fix.</li> <li>Coding Standards: You know the drill.</li> <li>Clear Commit Messages: Write clear and concise commit messages to facilitate understanding.</li> <li>Thorough Testing: Test your changes thoroughly before submitting a pull request.</li> <li>Documentation Updates: Include relevant documentation updates if your changes impact it.</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"#feedback","title":"Feedback","text":"<p>Spot a bug or have thoughts to share with us? Let's squash it together! Log it in our issue tracker, feel free to drop us an email at hello@clouddrove.com.</p> <p>Show some love with a \u2605 on our GitHub!  if our work has brightened your day! \u2013 your feedback fuels our journey!</p>"},{"location":"#join-our-slack-community","title":"Join Our Slack Community","text":"<p>Join our vibrant open-source slack community and embark on an ever-evolving journey with CloudDrove; helping you in moving upwards in your career path. Join our vibrant Open Source Slack Community and embark on a learning journey with CloudDrove. Grow with us in the world of DevOps and set your career on a path of consistency.</p> <p>\ud83c\udf10\ud83d\udcacWhat you'll get after joining this Slack community:</p> <ul> <li>\ud83d\ude80 Encouragement to upgrade your best version.</li> <li>\ud83c\udf08 Learning companionship with our DevOps squad.</li> <li>\ud83c\udf31 Relentless growth with daily updates on new advancements in technologies.</li> </ul> <p>Join our tech elites Join Now \ud83d\ude80</p>"},{"location":"#tap-into-our-capabilities","title":"Tap into our capabilities","text":"<p>We provide a platform for organizations to engage with experienced top-tier DevOps &amp; Cloud services. Tap into our pool of certified engineers and architects to elevate your DevOps and Cloud Solutions.</p> <p>At CloudDrove, has extensive experience in designing, building &amp; migrating environments, securing, consulting, monitoring, optimizing, automating, and maintaining complex and large modern systems. With remarkable client footprints in American &amp; European corridors, our certified architects &amp; engineers are ready to serve you as per your requirements &amp; schedule. Write to us at business@clouddrove.com.</p> <p>We are  The Cloud Experts!</p> <p>We \u2764\ufe0f  Open Source and you can check out our other modules to get help with your new Cloud ideas.</p>"},{"location":"installation/","title":"Installation Guide","text":""},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Go 1.20 or higher</li> <li>Git</li> <li>Terraform, Helm, and Docker Daemon installed and accessible via your PATH</li> </ul>"},{"location":"installation/#installation-steps","title":"Installation Steps","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/clouddrove/smurf.git\n</code></pre> <ol> <li>Change to the project directory:</li> </ol> <pre><code>cd smurf\n</code></pre> <ol> <li>Build the tool:</li> </ol> <pre><code>go build -o smurf .\n</code></pre> <p>This will build <code>smurf</code> in your project directory.</p>"},{"location":"sdkr/","title":"Docker User Guide","text":""},{"location":"sdkr/#using-smurf-sdkr-on-local","title":"Using Smurf SDKR on local","text":"<p>Use <code>smurf sdkr &lt;command&gt; &lt;flags&gt;</code> to run smurf sdkr commands. Supported commands include:</p> <ul> <li>Help: <code>smurf sdkr --help</code></li> <li>Build an Image: <code>smurf sdkr build</code></li> <li>Scan an Image: <code>smurf sdkr scan</code></li> <li>Push an Image: <code>smurf sdkr push --help</code></li> <li>Provision Registry Environment: <code>smurf sdkr provision-hub [flags]</code>(for Docker Hub)</li> </ul>"},{"location":"sdkr/#docker-provision-commands","title":"Docker Provision Commands","text":"<p>The <code>provision-ecr</code> command for Docker combines <code>build</code>, <code>scan</code>, and <code>publish</code> for AWS ECR.  </p> <p>The <code>provision-hub</code> command for Docker combines <code>build</code>, <code>scan</code>, and <code>publish</code>.  </p> <p>The <code>provision-gcr</code> command for Docker combines <code>build</code>, <code>scan</code>, and <code>publish</code> for GCP GCR.  </p> <p>The <code>provision-acr</code> command for Docker combines <code>build</code>, <code>scan</code>, and <code>publish</code> for Azure ACR.  </p>"},{"location":"sdkr/#usage","title":"Usage","text":"<p>The following workflow can build,scan and push a Docker image locally, providing vulnerability results under the code scanning section of the security tab. It also allows you to choose which vulnerability should block the workflow before pushing the Docker image to the Docker registry this workflow support DOCKERHUB, ECR or both.</p>"},{"location":"sdkr/#example-for-scan-and-push-docker-image-on-dockerhub","title":"Example for scan and push docker image on Dockerhub","text":"<pre><code>name: Smurf Docker Build and Publish\n\non:\n  push:\n    branches:\n      - master\n  workflow_dispatch:\n\njobs:\n  docker-build-publish:\n    runs-on: ubuntu-latest\n    permissions: write-all\n\n    env:\n      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}\n      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4.1.7\n\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v4\n        with:\n          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}\n          role-session-name: aws-auth\n          aws-region: #AWS_REGION\n\n\n      - name: Smurf sdkr build\n        uses: clouddrove-sandbox/smurf-custon-github-action-test@master\n        with:\n          tool: sdkr\n          command: build image_name:tag\n\n      - name: Smurf sdkr push image\n        uses: clouddrove-sandbox/smurf-custon-github-action-test@master\n        with: \n          tool: sdkr\n          command: push hub USERNAME/image_name:tag\n</code></pre>"},{"location":"sdkr/#example-for-scan-and-push-docker-image-on-ecr","title":"Example for scan and push docker image on ECR","text":"<pre><code>name: Smurf sdkr provision-ecr\n\non:\n  push:\n    branches:\n      - master\n  workflow_dispatch:\n\njobs:\n  docker-build-publish:\n    runs-on: ubuntu-latest\n    permissions: write-all\n\n    env:\n      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}\n      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4.1.7\n\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v4\n        with:\n          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}\n          role-session-name: aws-auth\n          aws-region: \n\n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@v1\n\n      - name: Run Provision-ecr (Build,Scan and Push)\n        uses: clouddrove-sandbox/smurf-custon-github-action-test@master\n        with:\n          tool: sdkr\n          command: provision-ecr repo:image_name -f Dockerfile --yes\n</code></pre>"},{"location":"sdkr/#sdkr-build-flags","title":"Sdkr Build Flags","text":"<p>Below is a list of available flags for the <code>docker build</code> command:</p>"},{"location":"sdkr/#available-flags","title":"Available Flags","text":"Flag Type Description Default Value <code>--build-arg</code> <code>stringArray</code> Set build-time variables N/A <code>--context</code> <code>string</code> Build context directory Current directory <code>-f</code>, <code>--file</code> <code>string</code> Path to Dockerfile relative to context directory N/A <code>-h</code>, <code>--help</code> N/A Display help for the build command N/A <code>--no-cache</code> N/A Do not use cache when building the image N/A <code>--platform</code> <code>string</code> Set the platform for the build (e.g., linux/amd64, linux/arm64) N/A <code>--target</code> <code>string</code> Set the target build stage to build N/A <code>--timeout</code> <code>int</code> Set the build timeout <code>1500</code>"},{"location":"selm/","title":"Helm User Guide","text":""},{"location":"selm/#using-smurf-selm-on-local","title":"Using Smurf SELM on local","text":"<p>Use <code>smurf selm &lt;command&gt;</code> to run Helm commands. Supported commands include:</p> <ul> <li>Help: <code>smurf selm --help</code></li> <li>Create a Helm Chart: <code>smurf selm create</code></li> <li>Install a Chart: <code>smurf selm install</code></li> <li>Upgrade a Release: <code>smurf selm upgrade</code></li> <li>Provision Helm Environment: <code>smurf selm provision --help</code></li> </ul> <p>The <code>provision</code> command for Helm combines <code>install</code>, <code>upgrade</code>, <code>lint</code>, and <code>template</code>.</p>"},{"location":"selm/#context","title":"Context:","text":"<p>This workflow is used to upgrade the Helm charts using GitHub Actions. It utilizes the workflows defined in <code>.github/workflows/selm.yml</code></p>"},{"location":"selm/#usage","title":"Usage","text":"<p>The selm workflow can be triggered manually using the GitHub Actions workflow dispatch feature. It deploys or rollback Helm charts based on the specified inputs. Additionally, it also performs Helm template and Helm lint operations. To use the selm Workflow, add the following workflow definition to your <code>.github/workflows/selm.yml</code> file:</p>"},{"location":"selm/#example-for-aws-cloud-provider","title":"Example for AWS cloud provider","text":"<pre><code>name: Smurf selm\n\non:\n  push:\n    branches:\n      - master\n  workflow_dispatch:\n\njobs:\n  smurf-selm:\n    runs-on: ubuntu-latest\n    permissions: write-all\n    env:\n\n    steps:\n      - name: Check out in repo\n        uses: actions/checkout@v2.3.4\n\n      - name: Configure AWS credentials with OIDC\n        uses: aws-actions/configure-aws-credentials@v4\n        with:\n          role-to-assume: #oidc role for aws account authentication\n          aws-region: #aws_region\n\n      - name: Set environment variables\n        run: |\n          echo \"AWS_DEFAULT_REGION= \" &gt;&gt; $GITHUB_ENV  #add the default region\n          echo \"EKS_CLUSTER_NAME= \" &gt;&gt; $GITHUB_ENV    #add the eks_cluster name\n\n      - name: Smurf SDKR Provision (for image building and ecr push)\n        uses: clouddrove-sandbox/smurf-custon-github-action-test@master\n        with:\n          tool: sdkr\n          command: provision-ecr repo:image_name\n\n      - name: Smurf SELM Upgrade\n        uses: clouddrove-sandbox/smurf-custon-github-action-test@master\n        with:\n          tool: selm\n          command: upgrade release_name --install --atomic --set image.tag=${{ env.tag }} -f values.yaml ./my_chart --namespace  --timeout int\n</code></pre>"},{"location":"selm/#selm-deployment-parameters","title":"Selm Deployment Parameters","text":"Parameter Description Required release Helm release name. Will be combined with track if set. \u2705 Yes namespace Kubernetes namespace name. \u2705 Yes chart Helm chart path. If set to <code>\"app\"</code>, this will use the built-in Helm chart found in this repository. \u2705 Yes values Helm chart values, expected to be a YAML or JSON string. \u274c No token GitHub repository token. If included and the event is a deployment, then the <code>deployment_status</code> event will be fired. \u274c No version Version of the app, usually the commit SHA works here. \u274c No timeout Specify a timeout for Helm deployment. \u274c No repo Helm chart repository to be added. \u274c No repo-username Helm repository username if authentication is needed. \u274c No repo-password Helm repository password if authentication is needed. \u274c No atomic If <code>true</code>, the upgrade process rolls back changes made in case of a failed upgrade. Defaults to <code>true</code>. \u274c No"},{"location":"stf/","title":"Terraform User Guide","text":""},{"location":"stf/#using-smurf-stf-on-local","title":"Using Smurf STF on local","text":"<p>Use <code>smurf stf &lt;command&gt;</code> to run Terraform commands. Supported commands include:</p> <ul> <li>Help: <code>smurf stf --help</code></li> <li>Initialize Terraform: <code>smurf stf init</code></li> <li>Generate and Show Execution Plan: <code>smurf stf plan</code></li> <li>Apply Terraform Changes: <code>smurf stf apply</code></li> <li>Detect Drift in Terraform State: <code>smurf stf drift</code></li> <li>Provision Terraform Environment: <code>smurf stf provision</code></li> </ul> <p>The <code>provision</code> command for Terraform performs <code>init</code>, <code>validate</code>, and <code>apply</code>.</p>"},{"location":"stf/#using-smurf-stf-in-github-action","title":"Using Smurf STF in GitHub Action","text":"<p>This GitHub Action Initialize Terraform and Validate Terraform changes.</p> <pre><code>name: Smurf STF Workflow\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  terraform:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Smurf stf init\n        uses: clouddrove/smurf@master\n        with:\n          path:   # we can specify the path of folder where main.tf is located.\n          tool: stf\n          command: init\n\n      - name: Smurf stf validate\n        uses: clouddrove/smurf@master\n        with:\n          path:   \n          tool: stf\n          command: validate\n</code></pre>"},{"location":"stf/#all-available-commands-in-smurf-stf","title":"All available commands in Smurf STF","text":"Command Description <code>apply</code> Apply the changes required to reach the desired state of Terraform Infrastructure <code>destroy</code> Destroy the Terraform Infrastructure <code>drift</code> Detect drift between state and infrastructure  for Terraform <code>format</code> Format the Terraform Infrastructure <code>init</code> Initialize Terraform <code>output</code> Generate output for the current state of Terraform Infrastructure <code>plan</code> Generate and show an execution plan for Terraform <code>provision</code> Its the combination of init, plan, apply, output for Terraform <code>validate</code> Validate  Terraform changes"},{"location":"stf/#available-flags-for-provision-command","title":"Available Flags for Provision Command","text":"Flag Description Default Value <code>--approve</code> Skip interactive approval of plan before applying <code>true</code> <code>-h, --help</code> Display help for the provision command N/A <code>--var string</code> Specify a variable in 'NAME=VALUE' format N/A <code>--var-file string</code> Specify a file containing variables N/A"}]}